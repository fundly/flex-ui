<?xml version="1.0" encoding="utf-8"?>
<mx:ColumnChart xmlns:mx="http://www.adobe.com/2006/mxml"
	styleName="columnChart"
	showDataTips="true"
	dataTipFunction="tipFunction">
	
	<mx:horizontalAxis>
		<mx:CategoryAxis id="xAxis" categoryField="name" />
	</mx:horizontalAxis>
	
	<mx:verticalAxis>
		<mx:LinearAxis id="yAxis" labelFunction="verticalAxisLabelFunction" />
	</mx:verticalAxis>
	
	<mx:horizontalAxisRenderers>
		<mx:AxisRenderer axis="{xAxis}" fontSize="9" axisStroke="{axisStroke}" />
	</mx:horizontalAxisRenderers>
	
	<mx:verticalAxisRenderers>
		<mx:AxisRenderer axis="{yAxis}" fontSize="9" axisStroke="{axisStroke}" />
	</mx:verticalAxisRenderers>
	
	<mx:series>
		<mx:ColumnSet type="clustered">
			<mx:ColumnSeries
				displayName="Total Pledged" 
				xField="name" yField="total_pledged"
				filters="{barFilters}"
				showDataEffect="{seriesInterpolate}">
				<mx:fill>
					<mx:SolidColor color="#BFBC90" />
				</mx:fill>
			</mx:ColumnSeries>
			<mx:ColumnSeries 
				displayName="Total Contributed"
				xField="name" yField="total_contributed"
				filters="{barFilters}"
				showDataEffect="{seriesInterpolate}">
				<mx:fill>
					<mx:SolidColor color="#2983CA" />
				</mx:fill>
			</mx:ColumnSeries>	
		</mx:ColumnSet>
	</mx:series>
	
	<mx:CurrencyFormatter id="cf" />
	
	<mx:Array id="barFilters">
		<mx:DropShadowFilter alpha=".5" distance="2"/>	
	</mx:Array>
		
	<mx:Stroke id="axisStroke" weight="2" color="#000000" alpha=".2" />
	
	<mx:SeriesInterpolate id="seriesInterpolate" minimumElementDuration="800" />
	
	<mx:Script>
		<![CDATA[
			import mx.charts.chartClasses.IAxis;
			import mx.charts.chartClasses.IAxisRenderer;
			import com.enilsson.elephanttrakker.modules.compgraphs.vo.GroupStatistics;
			import mx.charts.series.ColumnSeries;
			import mx.charts.HitData;
			
			protected function tipFunction(hitData:HitData):String {
				
				var gs : GroupStatistics = hitData.item as GroupStatistics;
				var elem : ColumnSeries = hitData.chartItem.element as ColumnSeries;
				var str : String = "<b>" + gs.name + "</b>" + "<br>" + elem.displayName + ": ";				
				
				switch( elem.yField ) {
					case "total_pledged":
						str += cf.format(gs.total_pledged) + 
							"<br>Total Pledges: " + gs.number_pledges;
					break;
					case "total_contributed":
						str += cf.format(gs.total_contributed) + 
							"<br>Total Contributions: " + gs.number_contributions;
					break;
				}

				return str; 
			}
			
			private function verticalAxisLabelFunction(labelValue:Object, previousValue:Object, axis:IAxis) : String {
				return cf.format( labelValue );
			}
			
		]]>
	</mx:Script>
	
	<mx:Style>
		.columnChart {
			horizontalAxisStyleName: axisStyle;
			verticalAxisStyleName: axisStyle;
			gridLinesStyleName: gridStyle;
		}
		.axisStyle {
			tickPlacement:none;
		}
		.gridStyle {
			
		}
	</mx:Style>
	
</mx:ColumnChart>
