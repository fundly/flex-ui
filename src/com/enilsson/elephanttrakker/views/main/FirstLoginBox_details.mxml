<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas 
	verticalScrollPolicy="off" horizontalScrollPolicy="off"
 	initialize="init()" backgroundColor="#FFFFFF"
	xmlns:mx="http://www.adobe.com/2006/mxml" 
	xmlns:struktorForm="com.enilsson.utils.struktorForm.*" 
	xmlns:common="com.enilsson.elephanttrakker.views.common.*" 
	xmlns:graphics="com.enilsson.graphics.*"
	enabled="false">
		
	<mx:Canvas top="0" left="0" width="100%" height="37" backgroundColor="#999999" color="#ffffff">
		<mx:Image source="{_model.icons.singleUser}" verticalCenter="0" left="10" />
		<mx:Text verticalCenter="0" left="50" 
			text="Please enter your details to complete your sign up" 
			filters="{[com.enilsson.graphics.enDropShadows.textDS(0x333333)]}"
			fontSize="18" />
	</mx:Canvas>

	<mx:Text styleName="detailsTitle" text="PERSONAL DETAILS" left="30" top="50" rotation="90" />
	
	<struktorForm:StruktorForm id="myDetailsForm" 
		styleName="processingForm"
		width="50%" maxHeight="280" 
		left="15" top="50" 
		layoutProvider="{_model.struktorLayout.tr_users}" 
		formBuildComplete="this.enabled = true" 
		dataProvider="{_model.session.data}" 
		excludedFields="{['_itemsperpage']}"
		numColumns="1" 
		debugMode="{_model.debug}" />
	
	<mx:Text styleName="detailsTitle" text="PASSWORD PREFERENCES" left="370" top="50" rotation="90" />
		
	<mx:Canvas id="pwdBOX"
		width="50%" left="375" top="32" 
		horizontalScrollPolicy="off" verticalScrollPolicy="off">
		<mx:Form width="100%" height="100%">
			<mx:FormItem required="true" label="Temporary Password" styleName="formItems">
				<mx:TextInput id="password_old" styleName="formItems" displayAsPassword="true"  />				
			</mx:FormItem>
			<mx:FormItem required="true" label="New Password" styleName="formItems">
				<mx:TextInput id="password" styleName="formItems" 
					keyUp="currentState = password.text.length > 0 ? 'showPwdMeter' : '';"
					displayAsPassword="true"  />				
			</mx:FormItem>
			<mx:FormItem id="pwdMeter"
				label="Password Strength"
				styleName="labelStyleName" paddingTop="4" 
				color="#666666" backgroundColor="#e0e0e0"
				visible="false" includeInLayout="false" height="0">
				<graphics:PasswordMeter text="{password.text}" 
					trackHeight="6" minLength="7" verticalGap="0"
					fontSize="9" color="#666666" 
					width="160" />		
			</mx:FormItem>
			<mx:FormItem required="true" label="Confirm Password" styleName="formItems">
				<mx:TextInput id="password_match" styleName="formItems" displayAsPassword="true" />				
			</mx:FormItem>
			<mx:Spacer height="5" />
			<mx:Text color="#333333" fontSize="11" width="100%">
				<mx:htmlText><![CDATA[Passwords need to be at least <b>7</b> characters long, and a mixture of upper & lower-case letters and/or numbers. Passwords <b>ARE</b> case sensitive.]]></mx:htmlText>
			</mx:Text> 
		</mx:Form>
	</mx:Canvas>
	
	<mx:Canvas width="100%" height="36" bottom="10" verticalScrollPolicy="off">
		<common:ValidFormIndicator id="formStatus" top="3" right="180" 
			status="{myDetailsForm.isValid &amp;&amp; ((password.text == password_match.text) &amp;&amp; (password.text != ''))}" />
		<mx:Button id="submitForm" styleName="submitBtn" 
			useHandCursor="true" buttonMode="true" 
			enabled="{!_model.firstlogin.formProcessing &amp;&amp; 
						myDetailsForm.isValid &amp;&amp; 
						((password.text == password_match.text) &amp;&amp; 
						(password.text != ''))}"  
			click="upsertDetails(event)" 
			verticalCenter="0" right="20"		
			label="Save My Details" />
	</mx:Canvas>
	
	<mx:HBox id="wheelLogoutBox" 
	   	styleName="wheelLogout"
	   	visible="false">
	   	<mx:Text id="wheelLogout" link="linkHandler(event)" />		
	</mx:HBox>

	<mx:Canvas id="formProcessingIndicator" 
		visible="{_model.firstlogin.formProcessing}"
		top="0" left="0"
		width="100%" height="100%" 
		backgroundColor="#CCCCCC" backgroundAlpha="0.75"
		showEffect="fadeIn" hideEffect="fadeOut">
		<graphics:ActivityIndicator id="formActivity"
			visible="{formProcessingIndicator.visible}"
			width="85" height="85" 
			verticalCenter="0" horizontalCenter="0"
			boxFillColors="[0x12288c, 0x0b1850]" 
			textStyleName="processingText" 
			textMessage="Processing" />
	</mx:Canvas>
	
	<common:ErrorMsgBox id="callLoggingErrorBox"
		verticalCenter="0" horizontalCenter="0"
		params="{_model.firstlogin.errorVO}" />


    <mx:transitions>
       <mx:Transition>
            <mx:Parallel targets="{[pwdMeter]}">
                <mx:Resize duration="500" easingFunction="Bounce.easeOut"/>
            </mx:Parallel>
        </mx:Transition>
    </mx:transitions>
    <mx:states>
        <mx:State name="showPwdMeter">
            <mx:SetProperty target="{pwdMeter}" name="includeInLayout" value="true" />  
            <mx:SetProperty target="{pwdMeter}" name="visible" value="true" />
            <mx:SetProperty target="{pwdMeter}" name="height" value="28" />
        </mx:State>    
    </mx:states>

	
	<mx:Script>
		<![CDATA[
			import com.enilsson.elephanttrakker.events.session.EndSessionEvent;
			import com.enilsson.elephanttrakker.events.modules.first_login.FirstLoginEvent;
			import com.enilsson.elephanttrakker.events.modules.my_details.MyDetailsEvent;
			import com.enilsson.elephanttrakker.views.modules.call_logging.renderers.*;
			import com.enilsson.elephanttrakker.events.modules.call_logging.CallLoggingAutoCompleteEvent;
			import com.enilsson.elephanttrakker.events.session.PingEvent;
			import mx.utils.ObjectUtil;
			import org.osflash.thunderbolt.Logger;
			import com.enilsson.elephanttrakker.models.ETModelLocator;
			import mx.effects.easing.Bounce;

			[Bindable] private var _model:ETModelLocator = ETModelLocator.getInstance();		

			private function init():void
			{
				if(_model.debug) Logger.info('Init First Login Details');
				
				// ping the server to see all is well
				new PingEvent().dispatch();
				
				// show the logout option if this is an admin user
				if(_model.session.data.wheel)
				{
					wheelLogout.htmlText = _model.session.data.wheel.fname + ' ' + _model.session.data.wheel.lname;
					wheelLogout.htmlText += ' (admin) logged in as: <b>' + _model.session.fullname + '</b> ';
					wheelLogout.htmlText += ' |  <a href="event:http://www.enilsson.com"><font color="#FF0000"><b>logout</b></font></a>';					
					
					wheelLogoutBox.visible = true;
				}
				else
					wheelLogoutBox.visible = false;			
				
			}	
			
			/**
			 * Upsert the necessary details to complete the first login
			 */
			private function upsertDetails(event:MouseEvent):void
			{
				if(_model.debug) Logger.info('upsert MyFirstTime Details', myDetailsForm.formVariables);
				
				// initialise some objects	
				var fv:Object = new Object();
				var cd:Object = new Object();
				
				// add all the form variables to an object
				for ( var item:String in myDetailsForm.formVariables)
					fv[item] = myDetailsForm.formVariables[item];
		
/* 				
				// add the first login time
				fv['_firstlogin'] = Math.round( new Date().getTime()/1000 );
 */
				
				// add the password variables
				_model.firstlogin.newPWD = password.text;
				_model.firstlogin.oldPWD = password_old.text;
				
				_model.firstlogin.formVariables = fv;

				// build the contact details array
				cd['lname'] 	= myDetailsForm.formVariables['lname'];	
				cd['fname'] 	= myDetailsForm.formVariables['fname'];	
				cd['zip'] 		= myDetailsForm.formVariables['_zip'];	
				cd['city'] 		= myDetailsForm.formVariables['_city'];	
				cd['address1'] 	= myDetailsForm.formVariables['_address1'];	
				cd['address2'] 	= myDetailsForm.formVariables['_address2'];	
				cd['state'] 	= myDetailsForm.formVariables['_state'];
				cd['email'] 	= _model.session.email;	
				
				// remove the id from the contact details just in case...
				delete cd['id'];
				
				// if there is existing contact data add the id
				if ( _model.session.data.hasOwnProperty('_contact_id') )
					if ( _model.session.data._contact_id != null )
						cd['id'] = _model.session.data._contact_id;
				
				// if this is a resave add the contact id if present
				if ( _model.firstlogin.contact_id > 0 ) 
					cd['id'] = _model.firstlogin.contact_id;

				// add the contact details to the model
 				_model.firstlogin.contact_details = cd;
 				
 				if(_model.debug) Logger.info('MyFirstTime contact details', cd);

				// fire an event
 				new FirstLoginEvent( 
					FirstLoginEvent.FIRSTLOGIN_UPSERTCONTACT, 
					_model.firstlogin.contact_details 
				).dispatch();
  			}

			/**			
			 * Handle the proxy login logout procedure
			 */
			private function linkHandler(event:TextEvent):void
			{
				event.preventDefault();				
				new EndSessionEvent( EndSessionEvent.EVENT_END_PROXYSESSION ).dispatch();
			}

		]]>
	</mx:Script>
	
</mx:Canvas>