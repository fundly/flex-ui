<?xml version="1.0" encoding="utf-8"?>
<mx:HBox 
	xmlns:mx="http://www.adobe.com/2006/mxml" 
	verticalAlign="middle" horizontalScrollPolicy="off" 
	width="{explicitWidth}">

	<mx:Button styleName="btnRecordDonation" 
		toolTip="Record another pledge for {data.fname}"
		click="newPledge(data)"
		useHandCursor="true" buttonMode="true"
		 />
	<mx:Button styleName="btnEdit" 
		toolTip="Edit this pledge"
		click="editAction(data)"
		useHandCursor="true" buttonMode="true"
		/>
	<mx:Button styleName="btnDelete" 
		toolTip="Delete this pledge"
		visible="{data.c == 0}"
		click="deletePledge(data)"
		useHandCursor="true" buttonMode="true"
		/>

	
	<mx:Script>
		<![CDATA[
			import com.enilsson.common.utils.SharedCreditUtil;
			import com.enilsson.elephanttrakker.views.modules.pledge_workspace.model.PledgeWorkspaceVO;
			import com.enilsson.elephanttrakker.views.modules.pledge_workspace.events.SPWEvent;
			import com.enilsson.elephanttrakker.events.modules.my_history.MyHistoryEvent;
			import mx.utils.ObjectUtil;
			import org.osflash.thunderbolt.Logger;
			import mx.validators.CreditCardValidator;
			import com.enilsson.elephanttrakker.models.ETModelLocator;
		
			[Bindable] private var _model:ETModelLocator = ETModelLocator.getInstance();
			
			/**
			 * Load the pledge workspace with the contact details for a specific contact
			 */
			private function newPledge( data:Object ):void
			{ 
				var p:PledgeWorkspaceVO = new PledgeWorkspaceVO();
				p.contactID = data.contact_id;
				
				var action:String = data.created_by_id == _model.session.user_id ? 
					SPWEvent.ADD_EXISTING : 
					SPWEvent.ADD_SHARED;
								
				new SPWEvent ( action, p ).dispatch();
			}

			/**
			 * Load the pledge workspace with the details of an existing pledge
			 */
			private function editAction(data:Object):void
			{
				var p:PledgeWorkspaceVO = new PledgeWorkspaceVO();
				p.pledgeID = data.id
				
				new SPWEvent ( SPWEvent.EDIT, p ).dispatch();
			}
			
			/**
			 * Delete a pledge with no contributions
			 */
			private function deletePledge(data:Object):void
			{
				new MyHistoryEvent( MyHistoryEvent.DELETE_PLEDGE, { 'pledge_id' : data.id } ).dispatch();
			}
			
			override protected function updateDisplayList(w:Number, h:Number):void
			{
				super.updateDisplayList(w, h);
				visible = SharedCreditUtil.isSharedCreditPledge( data ) == false; 
			}
		]]>
		
	</mx:Script>
	

</mx:HBox>