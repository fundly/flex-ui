<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" 
	show="init()" 
	clipContent="true" 
	verticalScrollPolicy="off" horizontalScrollPolicy="off"
	xmlns:common="com.enilsson.elephanttrakker.views.common.*"
	xmlns:graphics="com.enilsson.graphics.*"
	xmlns:effects="com.enilsson.elephanttrakker.views.common.effects.*" 
	currentState="{_model.invitation.formState}" 
	currentStateChange="currentState_handler(event)" xmlns:controls="com.enilsson.controls.*">

	<mx:Image source="{_model.icons.email}" top="-2" right="-3" />
	<mx:Text id="contentTitle" styleName="contentTitle" text="RECRUIT A FUNDRAISER" top="40" right="-208" rotation="90" />
	
	<mx:HBox width="630" height="380" top="2" left="5">
		<mx:VBox styleName="emailForm" width="400" height="318">
			<mx:Form paddingTop="0" paddingBottom="0" verticalGap="4" width="100%">
				<mx:FormItem label="First Name" labelWidth="70" width="100%" required="true" styleName="formLabel">
					<mx:TextInput id="fname" styleName="formInput"
						text="{_model.invitation.fname}"
						width="100%" 
						keyUp="validateFields()"
						/>
				</mx:FormItem>		
				<mx:FormItem label="Last Name" labelWidth="70" width="100%" required="true" styleName="formLabel">
					<mx:TextInput id="lname" styleName="formInput"
						text="{_model.invitation.lname}"
						width="100%" 
						keyUp="validateFields()"
						/>
				</mx:FormItem>		
				<mx:FormItem label="Email:" labelWidth="70" width="100%" required="true" styleName="formLabel">
					<mx:TextInput id="email" styleName="formInput"
						text="{_model.invitation.email}"
						width="100%" 
						keyUp="validateFields()"
						/>
				</mx:FormItem>					
				<mx:FormItem label="Subject" labelWidth="70" width="100%" required="true" styleName="formLabel">
					<mx:TextArea id="subject" styleName="formInput" 
						text="{_model.session.fname} {_model.session.lname} has asked you to become a fundraiser with {_model.appName}"
						width="100%" 
						keyUp="validateFields()"
						/>
				</mx:FormItem>		
				<mx:FormItem width="100%" horizontalAlign="right">
					<mx:LinkButton label="add personal message" styleName="formLabel" 
						click="_model.invitation.formState = _model.invitation.formState != 'ShowPersonalMessage' ? 'ShowPersonalMessage' : 'hideMsg'" />
				</mx:FormItem>
				<mx:FormItem id="personalMessage" styleName="formLabel"
					visible="false" includeInLayout="false" height="0"
					label="Message" labelWidth="70" width="365">
					<mx:TextArea id="message" width="100%" height="100%" />
				</mx:FormItem>
				<mx:FormItem width="100%">
					<mx:HBox width="100%" horizontalAlign="right" paddingTop="10">
						<common:ValidFormIndicator id="formStatus" status="{isValid}" />
						<mx:Button id="sendEmail" styleName="submitBtn" 
							click="sendInvitation()" 
							useHandCursor="true" buttonMode="true" 
							label="Send Invitation" 
							enabled="{isValid &amp;&amp; !_model.invitation.isSubmitting}" />
					</mx:HBox>
				</mx:FormItem>
			</mx:Form>
		</mx:VBox>
	
		<mx:VBox width="100%" horizontalAlign="center">
			<mx:Text color="#333333" width="100%" fontSize="11"
				htmlText="This form allows you to send an invitation to join {_model.appName} to anyone via email.&lt;br&gt;&lt;br&gt;You can add a personal message to accompany the login details the new fundraiser will receive.&lt;br&gt;&lt;br&gt;If the invitation is accepted that fundraiser will automatically be added to your downline."
				 />
			<mx:Spacer height="5" />
			<mx:HRule width="60%" />
			<mx:Spacer height="5" />
			<mx:LinkButton label="See who you have already invited" styleName="formLabel" click="popupSentList()"/>
		</mx:VBox>

	</mx:HBox>

	<mx:Text styleName="contentTitle" text="INVITATION FORM" top="10" left="35" rotation="90" />
	
	<mx:Canvas id="formProcessingIndicator" 
		visible="{_model.invitation.isSubmitting}"
		top="0" left="0"
		width="100%" height="100%" 
		backgroundColor="#CCCCCC" backgroundAlpha="0.75"
		showEffect="fadeIn" hideEffect="fadeOut">
		<graphics:ActivityIndicator id="formActivity" visible="{_model.invitation.sendingInvitation}"
			width="85" height="85" 
			verticalCenter="0" horizontalCenter="0"
			boxFillColors="[0x12288c, 0x0b1850]" 
			textStyleName="processingText" 
			textMessage="Sending Emails" />
	</mx:Canvas>

	<controls:ErrorMsgBox verticalCenter="0" horizontalCenter="0" params="{_model.invitation.errorVO}" onClose="{_model.invitation.onClose}" />

	<mx:transitions>
		<mx:Transition>
			<mx:Parallel targets="{[personalMessage]}">
				<effects:BounceResize />
			</mx:Parallel>
		</mx:Transition>
	</mx:transitions>

	<mx:states>
		<mx:State name="hideMsg">
			<mx:SetProperty target="{personalMessage}" name="includeInLayout" value="false" />
			<mx:SetProperty target="{personalMessage}" name="visible" value="false" />
			<mx:SetProperty target="{personalMessage}" name="height" value="0" />
			<mx:SetProperty target="{message}" name="text" value="" />
		</mx:State>
		<mx:State name="ShowPersonalMessage">
			<mx:SetProperty target="{personalMessage}" name="includeInLayout" value="true" />
			<mx:SetProperty target="{personalMessage}" name="visible" value="true" />
			<mx:SetProperty target="{personalMessage}" name="height" value="100" />
		</mx:State>
	</mx:states>
	
	<mx:Fade id="fadeIn" alphaTo="1" duration="300" />
	<mx:Fade id="fadeOut" alphaTo="0" duration="300" />


	<mx:Style>
		.formInput {
			fontSize:10;
			paddingTop:1;
			paddingBottom:1;
			color:#333333;	
		}	
		.formLabel {
			fontSize:10;
			color:#333333;
		}
		.titleStyle {
			color:#FFFFFF;
			fontSize:14;
			fontWeight:"bold";
		}
		.emailForm {
			backgroundColor:#e0e0e0;
			borderStyle:solid;
			borderColor:#e0e0e0;
			cornerRadius:6;	
			paddingTop:10;
		}

	</mx:Style>

	<mx:Script>
		<![CDATA[
			import mx.managers.PopUpManager;
			import mx.events.CloseEvent;
			import com.adobe.cairngorm.control.CairngormEventDispatcher;
			import mx.events.StateChangeEvent;
			import com.enilsson.elephanttrakker.events.modules.invitation.InvitationEvent;
			import mx.events.ValidationResultEvent;
			import com.enilsson.vo.ErrorVO;
			import com.enilsson.utils.eNilssonUtils;
			import com.enilsson.elephanttrakker.events.session.PingEvent;
			import com.enilsson.elephanttrakker.models.ETModelLocator;	
			import mx.utils.ObjectUtil;
			import org.osflash.thunderbolt.Logger;	
			import mx.effects.easing.Bounce;

			[Bindable] private var _model:ETModelLocator = ETModelLocator.getInstance();
			[Bindable] private var isValid:Boolean = false;
			
			private var _formVariables:Array = new Array();
			
			public function set runInit(value:Boolean):void
			{				
				if(value && _model.mainViewState == ETModelLocator.INVITATION_VIEW)
					init();
			}
		
			private function init():void
			{
				// ping the server to see all is well
				new PingEvent().dispatch();	
				
				setFieldValidation();
			}
			
			public function get text ():String { return _text }
			private var _text:String;
			public function set text ( value:String ):void { }
			
			private function setFieldValidation():void
			{	
				_formVariables = new Array();
				isValid = false;		
				
				// set the validators 
				eNilssonUtils.setFieldValidator('email', email, _formVariables);
				eNilssonUtils.setFieldValidator('required', fname, _formVariables);
				eNilssonUtils.setFieldValidator('required', lname, _formVariables);
				eNilssonUtils.setFieldValidator('required', subject, _formVariables);
				
				// set the event listeners
				email.addEventListener(FocusEvent.FOCUS_OUT, validateFields);
				fname.addEventListener(FocusEvent.FOCUS_OUT, validateFields);
				lname.addEventListener(FocusEvent.FOCUS_OUT, validateFields);
				subject.addEventListener(FocusEvent.FOCUS_OUT, validateFields);
				
				validateFields();
			}
			
			private function currentState_handler(event:StateChangeEvent = null):void
			{
				CairngormEventDispatcher.getInstance().removeEventListener(InvitationEvent.INVITATION_SENT, resetForm);

				if(_model.debug) Logger.info('Current State', event.oldState, event.newState);
				
				if(event.newState != '') return;
				
				resetForm();
			}
			
			public function resetForm(event:InvitationEvent = null):void 
			{
				_model.invitation.fname = '';
				_model.invitation.lname = '';
				_model.invitation.email = '';
				fname.text = '';
				lname.text = '';
				email.text = '';
				message.text = '';

				fname.errorString = '';	
				lname.errorString = '';	
				email.errorString = '';	
				subject.errorString = '';
				
				isValid = false;
			}
			
			private function sendInvitation():void
			{
				_model.invitation.subject = subject.text;
				_model.invitation.message = currentState == 'ShowPersonalMessage' ? message.text : '';
				_model.invitation.email = email.text;
				_model.invitation.fname = fname.text;
				_model.invitation.lname = lname.text;
				
				new InvitationEvent(InvitationEvent.INVITATION_SEND).dispatch();
				CairngormEventDispatcher.getInstance().addEventListener(InvitationEvent.INVITATION_SENT, resetForm);
			}
			
			/**
			 * Run a validation routine on the fields
			 */
			private function validateFields(e:Event=null):void
			{
				var flag:Boolean = true;
				for(var i:String in _formVariables)
				{
					var vResult:ValidationResultEvent = _formVariables[i].validator.validate(null, true);
					if (vResult.type==ValidationResultEvent.INVALID) 
						flag = false;
					if(vResult.type == ValidationResultEvent.VALID)
						_formVariables[i].validator.source.errorString = null;
				}
				isValid = flag;
			}			
			private function popupSentList():void
			{
				var sentList:InvitationSentList = InvitationSentList(PopUpManager.createPopUp(_model.mainScreen, InvitationSentList, true));
				sentList.width = 700;
				sentList.height = 400;
				sentList.addEventListener(CloseEvent.CLOSE, function(e:Object):void{
					PopUpManager.removePopUp(sentList);
				});
				PopUpManager.centerPopUp(sentList);
			}

		]]>
	</mx:Script>
	
</mx:Canvas>