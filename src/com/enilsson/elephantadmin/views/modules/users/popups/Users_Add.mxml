<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas color="#333333"
	verticalScrollPolicy="off" horizontalScrollPolicy="off"
 	initialize="init()"
	xmlns:mx="http://www.adobe.com/2006/mxml" 
	xmlns:struktorForm="com.enilsson.utils.struktorForm.*" 
	xmlns:common="com.enilsson.elephantadmin.views.common.*" 
	xmlns:graphics="com.enilsson.graphics.*"
	>
	<mx:HBox width="100%" height="100%" horizontalGap="0">
		<mx:VBox width="100%" height="100%" verticalGap="0" horizontalAlign="right">
			<mx:Form paddingTop="0" paddingBottom="5" verticalGap="4" width="400" id="form1">
				<mx:FormItem labelWidth="120" label="User Email (login):" width="100%" required="true" styleName="formLabel">
						<mx:TextInput id="emailInput" width="100%"/>
				</mx:FormItem>
				<struktorForm:StruktorForm id="myDetailsForm"  
					styleName="processingForm"
					width="367" maxHeight="255"
					formInputWidth="233"
					formLabelWidth="120"
					layoutProvider="{_model.struktorLayout.tr_users}" 
					formBuildComplete="this.enabled = true" 
					excludedFields="{['_itemsperpage']}"
					numColumns="1" 
					debugMode="{_model.debug}"
					validateOnKeyPress="true" />
				<mx:FormItem horizontalAlign="right" width="100%" paddingRight="15">
					<mx:HBox horizontalAlign="right">
						<mx:CheckBox id="includeDownlineCheck" selected="true"/>
						<mx:Label text="Include this person in your Downline" styleName="formLabel"/>
					</mx:HBox>
				</mx:FormItem>
			</mx:Form>
			<mx:Canvas width="100%" height="36" verticalScrollPolicy="off">
				<mx:Button id="submitForm" styleName="submitBtn" 
					useHandCursor="true" buttonMode="true" 
					enabled="{myDetailsForm.isValid &amp;&amp; isValid &amp;&amp; !_usersModel.formProcessing}"  
					click="upsertDetails(event)" 
					verticalCenter="0" right="20"		
					label="Save My Details" />
			</mx:Canvas>
		</mx:VBox>
		<mx:VBox width="100%" height="100%" paddingTop="10" paddingLeft="10" paddingRight="10" backgroundColor="#ffffff">
			<mx:Text color="#333333" width="100%" fontSize="11"
				htmlText="This form allows you to create a {_usersModel.appName} user without emailing him or her.&lt;br&gt;&lt;br&gt;The new user will be added to your downline if the checkbox is selected."
				 />
		</mx:VBox>
	</mx:HBox>

	<mx:EmailValidator id="emailVal" />

	<mx:Canvas id="formProcessingIndicator" 
		visible="{_usersModel.formProcessing}"
		top="0" left="0"
		width="100%" height="100%" 
		backgroundColor="#CCCCCC" backgroundAlpha="0.75"
		showEffect="fadeIn" hideEffect="fadeOut">
		<graphics:ActivityIndicator id="formActivity"
			visible="{formProcessingIndicator.visible}"
			width="85" height="85" 
			verticalCenter="0" horizontalCenter="0"
			boxFillColors="[0x12288c, 0x0b1850]" 
			textStyleName="processingText" 
			textMessage="Processing" />
	</mx:Canvas>
	
	<mx:Script>
		<![CDATA[
			import com.enilsson.elephantadmin.events.modules.UsersEvent;
			import com.enilsson.elephantadmin.vo.NewUserVO;
			import mx.events.ValidationResultEvent;
			import com.enilsson.utils.eNilssonUtils;
			import com.enilsson.elephantadmin.events.session.PingEvent;
			import com.enilsson.elephantadmin.models.EAModelLocator;
			import mx.utils.ObjectUtil;
			import org.osflash.thunderbolt.Logger;
			import mx.effects.easing.Bounce;

			[Bindable] private var _model:EAModelLocator = EAModelLocator.getInstance();

			import com.enilsson.elephantadmin.views.modules.users.model.UsersModel;

			private var _formVariables:Array = new Array();
			[Bindable] private var isValid:Boolean = false;

			[Bindable] private var _usersModel:UsersModel;
			
			public function set presentationModel(model:UsersModel):void
			{
				_usersModel = model;
			}

			private function init():void
			{
				if(_model.debug) Logger.info('Init add New user popup');
				
				// ping the server to see all is well
				new PingEvent().dispatch();
				myDetailsForm.formVariables = {};
				setFieldValidation();
			}

			private function setFieldValidation():void
			{	
				_formVariables = new Array();
				isValid = false;

				// set the validators 
/* 				eNilssonUtils.setFieldValidator('email', senderEmailInput, _formVariables);
				eNilssonUtils.setFieldValidator('required', senderNameInput, _formVariables);
 */				eNilssonUtils.setFieldValidator('email', emailInput, _formVariables);
				
				// set the event listeners
				emailInput.addEventListener(Event.CHANGE, validateFields);
/* 				senderNameInput.addEventListener(Event.CHANGE, validateFields);
				senderEmailInput.addEventListener(Event.CHANGE, validateFields);
 */				
				validateFields();
			}

			private function validateFields(e:Event=null):void
			{
				var flag:Boolean = true;
				for(var i:String in _formVariables)
				{
					var vResult:ValidationResultEvent = _formVariables[i].validator.validate(null, true);
					if (vResult.type==ValidationResultEvent.INVALID) 
						flag = false;
					if(vResult.type == ValidationResultEvent.VALID)
						_formVariables[i].validator.source.errorString = null;
				}
				isValid = flag;
			}

			/**
			 * Upsert the necessary details to complete the first login
			 */
			private function upsertDetails(event:MouseEvent):void
			{
				var newUserVO:NewUserVO = new NewUserVO();
				newUserVO.email = emailInput.text;
				newUserVO.fname = myDetailsForm.formVariables['fname'];
				newUserVO.lname = myDetailsForm.formVariables['lname'];
				newUserVO.address1 = myDetailsForm.formVariables['_address1'];
				newUserVO.address2 = myDetailsForm.formVariables['_address2'];
				newUserVO.city = myDetailsForm.formVariables['_city'];
				newUserVO.state = myDetailsForm.formVariables['_state'];
				newUserVO.zip = myDetailsForm.formVariables['_zip'];
				newUserVO.phone = myDetailsForm.formVariables['_phone'];
				newUserVO.goal = myDetailsForm.formVariables['_fundraising_goal'];
				newUserVO.addDownline = includeDownlineCheck.selected ? 1 : 0;

				var fv:Object = ObjectUtil.copy(myDetailsForm.formVariables);
				fv.email = emailInput.text;
				fv.addDownline = includeDownlineCheck.selected;

				new UsersEvent(UsersEvent.CREATE_USER, _usersModel, newUserVO).dispatch();
 			}


		]]>
	</mx:Script>
	
</mx:Canvas>