<?xml version="1.0" encoding="utf-8"?>
<module:ReportModule xmlns:module="com.enilsson.elephantadmin.views.modules.reporting.base.*"
	xmlns:mx="http://www.adobe.com/2006/mxml"
	layout="absolute"
	width="100%" height="100%"
	xmlns:reporting="com.enilsson.elephantadmin.views.modules.reporting.fundraisers.*"
	xmlns:components="modules.components.*"
	clipContent="true"
	verticalGap="0"
	paddingTop="0" paddingBottom="0"
	horizontalScrollPolicy="on"
	verticalScrollPolicy="off"
	creationComplete="init()">

	<mx:VBox width="100%" height="100%" verticalGap="5">
		<mx:Canvas width="100%" styleName="controlBar">
			<mx:HBox paddingTop="3" paddingBottom="3" paddingLeft="5" horizontalGap="5" verticalAlign="middle">
				<mx:FormItem label="Region:">
					<mx:ComboBox width="200" rowCount="10" color="#000000" dataProvider="{_presentationModel.regionFilter}" id="region" enabled="{!dataLoading}" change="_presentationModel.regionChangeHandler(event)"/>
				</mx:FormItem>
			</mx:HBox>
			<mx:HBox
				horizontalGap="2" verticalGap="2" horizontalAlign="center"
				right="5" verticalAlign="middle" verticalCenter="0">
				<mx:Text id="recordsDesc"
					htmlText="{_presentationModel.recordsHtmlText}"
					fontSize="10"
					color="#FFFFFF"
					/>
				<mx:HBox horizontalGap="5" >
					<mx:Button width="80" label="Generate" color="#000000"
						click="_presentationModel.generate()"
						enabled="{!dataLoading}" />
					<mx:Button width="80" label="Export" color="#000000"
						click="presentationModel.exportGrid(grid.dG.columns)"
						enabled="{!dataLoading}" 
						visible="{_presentationModel.exportAllowed}"
						includeInLayout="{_presentationModel.exportAllowed}"/>
				</mx:HBox>
			</mx:HBox>
		</mx:Canvas>
		<module:PaginationGrid id="grid" height="100%"
			dataProvider="{presentationModel.gridRecords}"
			newPage="presentationModel.newPage(event)" 
			selectedPage="{presentationModel.gridCurrentPage}" 
			itemsPerPage="{presentationModel.itemsPerPage}"
			itemsTotal="{presentationModel.gridTotalRecords}"
			headerRelease="presentationModel.sortRecords(event)"
			columns="{gridColumns}"/>
	</mx:VBox>

	<mx:Array id="gridColumns">
		<mx:DataGridColumn width="22" sortable="false">
			<mx:itemRenderer>
				<mx:Component>
					<mx:HBox horizontalAlign="center">
						<mx:Button useHandCursor="true" buttonMode="true"
							styleName="inspectRecord"
							click="outerDocument._presentationModel.inspectHandler(data.sid)"
							toolTip="Go to this fundraiser" />
					</mx:HBox>
				</mx:Component>
			</mx:itemRenderer>
		</mx:DataGridColumn>
		<mx:DataGridColumn width="100" dataField="fname" headerText="First Name" />
		<mx:DataGridColumn width="100" dataField="lname" headerText="Last Name" />
		<mx:DataGridColumn width="90" dataField="_fundraising_goal" headerText="Fundraising Goal" labelFunction="money_labelFunc" sortCompareFunction="fundraising_goalCompare" textAlign="right"/>
		<mx:DataGridColumn width="90" dataField="pledge_total" headerText="Total Pledged" labelFunction="money_labelFunc" sortCompareFunction="pledge_totalCompare" textAlign="right"/>
		<mx:DataGridColumn width="90" dataField="contrib_total" headerText="Total Contribution" labelFunction="money_labelFunc" sortCompareFunction="contrib_totalCompare" textAlign="right"/>
		<mx:DataGridColumn width="90" dataField="downline_pledge" headerText="Downline Pledged" labelFunction="money_labelFunc" sortCompareFunction="downline_pledgeCompare" textAlign="right"/>
		<mx:DataGridColumn width="90" dataField="downline_contrib" headerText="Downline Contribution" labelFunction="money_labelFunc" sortCompareFunction="downline_contribCompare" textAlign="right"/>
		<mx:DataGridColumn width="90" dataField="user_contrib" headerText="Personal Contribution" labelFunction="money_labelFunc" sortCompareFunction="user_contribCompare" textAlign="right"/>
		<mx:DataGridColumn width="80" dataField="_fid" headerText="Fundraiser ID" sortCompareFunction="fidCompare"/>
		<mx:DataGridColumn width="100" dataField="_city" headerText="City" />
		<mx:DataGridColumn width="35" dataField="_state" headerText="State" />
		<mx:DataGridColumn width="45" dataField="_zip" headerText="Zip" />
		<mx:DataGridColumn width="100" dataField="_phone" headerText="Phone" />
		<mx:DataGridColumn width="150" dataField="email" headerText="Email" />
		<mx:DataGridColumn width="50" dataField="mod_group_id" headerText="Region ID"  sortCompareFunction="region_idCompare" />
		<mx:DataGridColumn width="100" dataField="mod_group_name" headerText="Region Name" />
	</mx:Array>

	<mx:CurrencyFormatter id="currencyFormatter" precision="2" currencySymbol="$" useNegativeSign="false" />
	<mx:DateFormatter id="dateFormatter"/>

	<mx:Script>
		<![CDATA[
			import com.enilsson.elephantadmin.views.common.IndexBar;
			import mx.core.UIComponent;
			import mx.containers.Canvas;
			import com.enilsson.utils.EDateUtil;
			import mx.utils.ObjectUtil;
			import com.enilsson.elephantadmin.views.modules.reporting.fundraisers.model.FundraisersModel;
			import mx.events.DataGridEvent;
		
			[Bindable] public var _presentationModel:FundraisersModel;
			
			private function init():void
			{
				presentationModel = new FundraisersModel();
				_presentationModel = presentationModel as FundraisersModel;
				_presentationModel.init();
			}

			private function fundraising_goalCompare(obj1:Object, obj2:Object):int
			{
				return ObjectUtil.numericCompare(obj1.fundraising_goal,obj2.fundraising_goal);
			}

			private function pledge_totalCompare(obj1:Object, obj2:Object):int
			{
				return ObjectUtil.numericCompare(obj1.pledge_total,obj2.pledge_total);
			}

			private function contrib_totalCompare(obj1:Object, obj2:Object):int
			{
				return ObjectUtil.numericCompare(obj1.contrib_total,obj2.contrib_total);
			}

			private function downline_contribCompare(obj1:Object, obj2:Object):int
			{
				return ObjectUtil.numericCompare(obj1.downline_contrib,obj2.downline_contrib);
			} 

			private function downline_pledgeCompare(obj1:Object, obj2:Object):int
			{
				return ObjectUtil.numericCompare(obj1.downline_pledge,obj2.downline_pledge);
			}

			private function user_contribCompare(obj1:Object, obj2:Object):int
			{
				return ObjectUtil.numericCompare(obj1.user_contrib,obj2.user_contrib);
			}

			private function fidCompare(obj1:Object, obj2:Object):int
			{
				var fid1String:String = String(obj1._fid).match(/\D+/)[0];
				var fid2String:String = String(obj2._fid).match(/\D+/)[0];

				if(fid1String != fid2String)
					return ObjectUtil.stringCompare(fid1String,fid2String);

				var fid1Number:int = String(obj1._fid).match(/\d+/)[0];
				var fid2Number:int = String(obj2._fid).match(/\d+/)[0];

				return ObjectUtil.numericCompare(fid1Number,fid2Number);
			}

			private function region_idCompare(obj1:Object, obj2:Object):int
			{
				return ObjectUtil.numericCompare(obj1.mod_group_id,obj2.mod_group_id);
			}

			private function money_labelFunc(item:Object, column:DataGridColumn):String {
				return currencyFormatter.format(item[column.dataField]);
			}

			private function date_labelFunc(item:Object, column:DataGridColumn):String 
			{
				dateFormatter.formatString = "MM/DD/YY"
				return dateFormatter.format(EDateUtil.timestampToLocalDate(item[column.dataField]));
			}

			private function datetime_labelFunc(item:Object, column:DataGridColumn):String 
			{
				dateFormatter.formatString = "MM/DD/YY L:NNA"
				return dateFormatter.format(EDateUtil.timestampToLocalDate(item[column.dataField]));
			}
		]]>
	</mx:Script>

</module:ReportModule>