<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml"
	xmlns:common="com.enilsson.elephantadmin.views.common.*"
	label="PLEDGES" 
	enabled="{!_presentationModel.pledgesTabLoading}"
	implements="com.enilsson.elephantadmin.interfaces.IOptionView"	
	width="100%" 
	height="100%">

	<mx:VBox verticalGap="2"
		horizontalAlign="center"
		top="0" left="10"
		width="{width - 20}" height="{height-10}">
		
		<mx:HBox color="#333333" fontSize="11" 
			verticalAlign="middle" width="100%">
			<mx:Text htmlText="&lt;b&gt;Pledged&lt;/b&gt;: {cf.format(_presentationModel.selectedRecord.pledge_total)}" />
			<mx:VRule height="10" />
			<mx:Text htmlText="&lt;b&gt;Contributed&lt;/b&gt;: {cf.format(_presentationModel.selectedRecord.contrib_total)}" />
			<mx:Spacer width="100%" />
			<common:ListGridToggle stateChange="pledgesVstack.selectedIndex = event.currentTarget.showState == ListGridToggle.LIST ? 0 : 1;" />			
		</mx:HBox>
		
		<mx:Spacer height="5" />
				
		<mx:ViewStack id="pledgesVstack" width="100%" height="100%">
			<mx:Canvas horizontalScrollPolicy="off">
				<mx:List width="100%" height="100%" 
					alternatingItemColors="['#FFFFFF', '#EDEDED']" 
					variableRowHeight="true" 
					itemRenderer="com.enilsson.elephantadmin.views.modules.events.renderers.Events_PledgesRenderer"
					dataProvider="{_presentationModel.pledges}" />
			</mx:Canvas>
			<mx:Canvas>
				<mx:DataGrid width="100%" height="100%" 
					alternatingItemColors="['#FFFFFF', '#EDEDED']" 
					dataProvider="{_presentationModel.pledges}">
					<mx:columns>
						<mx:DataGridColumn headerText="Address"
							dataField="address1" />
						<mx:DataGridColumn headerText="City"
							dataField="city" />
						<mx:DataGridColumn headerText="State"
							dataField="state" />
						<mx:DataGridColumn headerText="Pledged"
							dataField="pledge_amount"
							textAlign="right" 
							labelFunction="amountLabel" />
						<mx:DataGridColumn headerText="Contributed"
							dataField="contrib_total" 
							textAlign="right"
							labelFunction="amountLabel" />
						<mx:DataGridColumn headerText="Event" 
							labelFunction="eventLabel" />
						<mx:DataGridColumn headerText="Date"
							labelFunction="dateLabel"
							dataField="pledge_date"  />
						<mx:DataGridColumn width="22">
							<mx:itemRenderer>
								<mx:Component>
									<mx:HBox horizontalAlign="center">
										<mx:Button useHandCursor="true" buttonMode="true"
											styleName="inspectRecord"
											click="new SidEvent( data.sid ).dispatch()"
											toolTip="Inspect this pledge" />
										<mx:Script>
											<![CDATA[
												import com.enilsson.elephantadmin.events.main.SidEvent;
											]]>
										</mx:Script>
									</mx:HBox>
								</mx:Component>
							</mx:itemRenderer>
						</mx:DataGridColumn>
					</mx:columns>
				</mx:DataGrid>
			</mx:Canvas>
		</mx:ViewStack>
		<mx:HBox width="100%" horizontalAlign="center" 
			horizontalGap="12" paddingTop="4">
			<common:RestrictedCreateBtn
				xmlns:common="com.enilsson.elephantadmin.views.common.*"
				label="NEW PLEDGE"
				toolTip="Add a new pledge for this event"
				width="100"
				click="popupPledgeWorkspace();"
				/>
		</mx:HBox>
	</mx:VBox>

	<mx:CurrencyFormatter id="cf"
		currencySymbol="$"
		decimalSeparatorFrom="."
		decimalSeparatorTo="."
		precision="2"
		rounding="nearest"
		thousandsSeparatorFrom=","
		thousandsSeparatorTo=","
		useThousandsSeparator="true"
		/>
	<mx:DateFormatter id="dateFormat" formatString="MM/DD/YY" />


	<mx:Script>
		<![CDATA[
			import com.enilsson.elephantadmin.views.modules.pledge_workspace.model.PledgeWorkspaceModel;
			import com.enilsson.elephantadmin.models.EAModelLocator;
			import com.adobe.cairngorm.model.ModelLocator;
			import com.enilsson.elephantadmin.views.modules.pledge_workspace.model.PledgeWorkspaceVO;
			import com.enilsson.elephantadmin.views.modules.pledges.Pledges;
			import mx.managers.PopUpManager;
			import mx.core.Application;
			import com.enilsson.elephantadmin.views.modules.pledge_workspace.PWPopupContainer;
			import com.enilsson.utils.EDateUtil;
			import com.enilsson.elephantadmin.views.manage_record_base.model.RecordModel;
			import com.enilsson.elephantadmin.views.modules.events.model.EventsModel;
			import com.enilsson.elephantadmin.interfaces.IRecordModel;

			[Bindable] private var _model:EAModelLocator = EAModelLocator.getInstance();
			[Bindable] private var _presentationModel:EventsModel;
			public function set presentationModel ( value:IRecordModel ):void
			{
				_presentationModel = EventsModel(value);
			}
			public function get presentationModel():IRecordModel
			{
				return _presentationModel;
			}

			private function eventLabel(item:Object, column:DataGridColumn):String
			{
				return item.event_id.source_code;
			}
			
			private function amountLabel(item:Object, column:DataGridColumn):String
			{
				return cf.format(item[column.dataField]);
			}
			
			private function dateLabel(item:Object, column:DataGridColumn):String
			{
				return dateFormat.format( EDateUtil.timestampToLocalDate( item[column.dataField] ) );
			}

			public function popupPledgeWorkspace():void
			{
				// set up the popup
				var popup:PWPopupContainer = new PWPopupContainer();
				popup.defaultTab = "contact";
				popup.popupTitle = "Add a new Pledge for this Event";

				// set up the pwsVO
				var pwVO:PledgeWorkspaceVO = new PledgeWorkspaceVO();
				pwVO.action = PledgeWorkspaceModel.ADD_NEW;
				pwVO.eventID = _presentationModel.selectedRecord.id;
				EAModelLocator.getInstance().pledgeWorkspace = pwVO;

				// popup the window
				PopUpManager.addPopUp(popup, DisplayObject(Application.application), true);
				PopUpManager.centerPopUp(popup);

				// set up close window action
				popup.addEventListener(Event.CLOSE, function (event:Event):void
				{
					PopUpManager.removePopUp(PWPopupContainer(event.currentTarget));
				});
			}

		]]>
	</mx:Script>
	
</mx:Canvas>