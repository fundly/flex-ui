<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas 
	xmlns:mx="http://www.adobe.com/2006/mxml"
	xmlns:struktorForm="com.enilsson.utils.struktorForm.*" 
	xmlns:common="com.enilsson.elephantadmin.views.common.*" 
	xmlns:graphics="com.enilsson.graphics.*">
	
	<mx:Metadata>
		[Event(name="upsertRecord", type="flash.events.Event")]
		[Event(name="deleteRecord", type="flash.events.Event")]
		[Event(name="downloadFile", type="flash.events.Event")]
	</mx:Metadata>
	
	<mx:Script>
		<![CDATA[
			import com.enilsson.elephantadmin.vo.ErrorVO;
			import com.enilsson.controls.StackableFormItem;
			import mx.controls.TextInput;
			import mx.containers.HBox;
			import caurina.transitions.Tweener;
			import mx.events.ListEvent;
			import mx.controls.ComboBox;
			import mx.utils.ObjectUtil;
			import org.osflash.thunderbolt.Logger;
			import com.enilsson.elephantadmin.vo.RecordVO;
			import com.enilsson.elephantadmin.models.EAModelLocator;
			
			[Bindable] private var _model:EAModelLocator = EAModelLocator.getInstance();

			/**
			 * Get the variables from the form
			 */
			public function get formVariables():Object
			{
				return moduleForm.formVariables;
			}
			
			/**
			 * Get the status of the form
			 */
			
			public function get isValid():Boolean
			{
				 _fileType = moduleForm.getField('filetype') as ComboBox
				if(_fileType.selectedItem.value == "")
					return false;
				if(_model.email_attachments.fileChanged)
					if(_model.email_attachments.fileRef.size > _model.email_attachments.fileMaxSize * 1024 * 1024)
						return false;

				return moduleForm.isValid;
			}
			
			[Bindable] private var _showProgress:Boolean = false;
			public function set showProgress(value:Boolean):void
			{
				_showProgress = value;
			}
			
			public function set progress(value:uint):void
			{
				fileProgress.setProgress(value, 100);
				fileProgress.label = 'uploading file...' + value.toString() + '%';
			}

			private var _fileType:ComboBox;

			private function displayFileName():void
			{
				_model.email_attachments.fileChanged = false;

				//Check for null error on dynamic object attachment_id
				try {
					filenameLabel.text = _model.email_attachments.formRecord.attachment_id.filename;
				}
				catch( e : Error ) {
					if( filenameLabel )
						filenameLabel.text = "";
				}
			}

			private function onBrowseFile(event:MouseEvent):void
	  		{
				_fileType = moduleForm.getField('filetype') as ComboBox;
				if( !_fileType.selectedItem ) return;

				var fileTypes:String = "*." + _fileType.selectedItem.value
				fileTypes = fileTypes.replace( /,/g ,";*.");

	  			var f:FileFilter = new FileFilter("Allowed Types",fileTypes);
	  			_model.email_attachments.fileRef.browse([f]);
				_model.email_attachments.fileRef.addEventListener(Event.SELECT, function(e:Event):void{
				if(_model.email_attachments.fileRef.size > _model.email_attachments.fileMaxSize * 1024 * 1024)
				{
					_model.errorVO = new ErrorVO("The file cannot be larger than "+_model.email_attachments.fileMaxSize+"MB","errorBox", true);
				}
				else
				{
					formVariables['filesize'] = _model.email_attachments.fileRef.size;
					filenameLabel.text = _model.email_attachments.fileRef.name;
					_model.email_attachments.fileChanged = true;
				}
				});
	  		}

		]]>
	</mx:Script>

	<mx:Style>
		.attachmentsForm {
			labelWidth:75;
			formInputWidth:225;
			formInputStyleName:'userFormInput';
			formItemStyleName:'userFormLabel';
			requiredLabelStyleName:'userFormLabel';
		}
		.userFormInput {
			color:#333333;
			fontSize:14;	
		}
		.userFormLabel {
			fontSize:10;
			color:#333333;	
		}
		.formActivityText {
			color:#333333;
			fontSize:8;
			fontWeight:'normal';	
		}
	</mx:Style>
	
	<mx:VBox verticalGap="0" backgroundColor="#CCCCCC" height="100%" width="100%">
		<struktorForm:StruktorForm id="moduleForm"
			styleName="attachmentsForm"
			width="{width}" height="250"
			layoutProvider="{_model.struktorLayout.email_attachments}" 
			dataProvider="{_model.email_attachments.formRecord}" 
			stackFormItems="true"
			selectedFields="{['title','description','filetype','attachment_id','publish']}" 
			dataChange="_model.dataChanged = true;;" 
			formBuildComplete="_model.dataChanged = false; displayFileName();"
			/>
		<mx:VBox id="fileBrowser" width="100%"
			height="{height - moduleForm.height - footer.height}" 
			paddingLeft="15" paddingRight="15">
			<mx:Label text="File" styleName="userFormLabel"/>
			<mx:HBox width="100%">
				<mx:TextInput id="filenameLabel" width="100%" editable="false" styleName="userFormInput"/>
				<mx:Button label="Browse" click="onBrowseFile(event)"/>	
			</mx:HBox>
			<mx:Button label="View File" click="dispatchEvent( new Event('downloadFile') )"/>	
		</mx:VBox>
		<mx:Canvas id="footer" width="100%" height="28" styleName="controlBar">
			<common:RestrictedDeleteLinkBtn
				visible="{!_model.email_attachments.addingRecord}" 
				verticalCenter="0" left="10"
				click="dispatchEvent( new Event('deleteRecord') )"
				 />
			
			<!-- Either show the SAVE or the UPDATE button -->	 
			<common:RestrictedCreateBtn
				visible="{_model.email_attachments.addingRecord == true}" 
				label="SAVE"
				toolTip="{moduleForm.isValid ? 'This form is ready to submit' : 'Please correctly fill in all form fields'}" 
				enabled="{moduleForm.isValid}"
				verticalCenter="0" right="10"
				click="dispatchEvent( new Event('upsertRecord') )" />
			<common:RestrictedUpdateBtn
				visible="{_model.email_attachments.addingRecord == false}"
				label="UPDATE"
				toolTip="{moduleForm.isValid ? 'This form is ready to submit' : 'Please correctly fill in all form fields'}" 
				enabled="{moduleForm.isValid}"
				verticalCenter="0" right="10"
				click="dispatchEvent( new Event('upsertRecord') )" />
				
		</mx:Canvas>
	</mx:VBox>

	<mx:Canvas id="formProcessing"
		width="100%" height="100%"
		visible="{_model.news.formProcessing}"
		showEffect="fadeIn" hideEffect="fadeOut"
		backgroundColor="#ededed"
		alpha="0.75"
		>
		<graphics:ActivityIndicator 
			id="formProcessingActivity"
			width="110" height="110" 
			horizontalCenter="0" verticalCenter="0"
			alpha="1"
			boxFillColors="[0x999999, 0x999999]" 
			boxCornerRadius="2" 
			textAlpha="1" 
			textMessage="form processing"  
			textStyleName="formActivityText"
			/>
	</mx:Canvas>
	
	<mx:Canvas id="fileProgressBox"
		width="100%" height="100%"
		visible="{_showProgress}"
		showEffect="fadeIn" hideEffect="fadeOut"
		backgroundColor="#ededed"
		alpha="0.75"
		>
		<mx:ProgressBar id="fileProgress" 
			label="uploading file..." 
			minimum="0" 
			maximum="100"
			direction="right" 
			mode="manual"
			horizontalCenter="0" 
			verticalCenter="0" />
	</mx:Canvas>
	
</mx:Canvas>