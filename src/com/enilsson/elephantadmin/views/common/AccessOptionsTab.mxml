<?xml version="1.0" encoding="utf-8"?>
<mx:VBox 
	label="ACCESS"
	xmlns:mx="http://www.adobe.com/2006/mxml"
	verticalGap="12" paddingLeft="10" paddingRight="10"
	paddingTop="10" color="#333333"
	implements="com.enilsson.elephantadmin.interfaces.IOptionView">


	<mx:VBox width="100%" paddingLeft="10" paddingRight="10">
		<mx:Text styleName="textHeading"
			text="{headerText}" />
		<mx:Text styleName="textDesc" width="100%"
			text="{text}" />
	</mx:VBox>
	
	<mx:HRule width="100%" strokeWidth="2" strokeColor="#E4E4E4" shadowColor="#B3B3B3"/>
	
	<mx:HBox width="100%" paddingLeft="10" paddingRight="10">
		<mx:CheckBox id="showAll" 
			label="Show to all users:"  
			selected="true" 
			change="dispatchEvent(new Event('change'))" />
	</mx:HBox>	
		
	<mx:HRule width="100%" strokeWidth="2" strokeColor="#E4E4E4" shadowColor="#B3B3B3"/>
	
	<mx:VBox width="100%"
		enabled="{!showAll.selected}" 
		paddingLeft="10" paddingRight="10" paddingBottom="10">
		<mx:Text text="Show only to one group" />
		<mx:ComboBox id="listItemGroup" 
			styleName="formInput" width="100%"
			change="dispatchEvent(new Event('change'))"
			dataProvider="{_cbGroups}" 
			prompt="[-- Select group --]"/>
	</mx:VBox>

	
	<mx:Metadata>
		[Event(name="change", type="flash.events.Event")]
	</mx:Metadata>
	
	<mx:Script>
		<![CDATA[
			import com.enilsson.elephantadmin.views.modules.events.model.EventsModel;
			import com.enilsson.elephantadmin.interfaces.IRecordModel;
			import mx.utils.ObjectUtil;
			import org.osflash.thunderbolt.Logger;
			import mx.collections.ArrayCollection;
			import com.enilsson.elephantadmin.models.EAModelLocator;
			
			[Bindable] public var headerText : String;
			[Bindable] public var text : String; 
			
			[Bindable] private var _model:EAModelLocator = EAModelLocator.getInstance();
			[Bindable] private var _itemID:int = 0;
			
			public function set dataProvider(value:Object):void
			{
				if(!value || value.length == 0 || !value.id) return;

				_itemID = value.id;
				
				var groupID:int = value.mod_group_id;
				
				showAll.selected = ( value.mod_e_read == 1 );

				if(listItemGroup.dataProvider)
				{
					if(listItemGroup.dataProvider.length > 1)
					{
						for( var i:Number=0; i < listItemGroup.dataProvider.length; i++)
						{
							if(groupID == listItemGroup.dataProvider[i].value)
							{
								listItemGroup.selectedIndex = i;
								break;
							}
						}
					}
				}
			}
			
			[Bindable] private var _cbGroups:Array;
			public function set setGroups(value:Object):void
			{
 				_cbGroups = [{ value : '', label : '[-- Select group --]' }];
				
				for each( var i:Object in value)
				{
					_cbGroups.push(i);
				}
			}
			
			[Bindable(event="change")]
			public function get visibilityType():String
			{
				return showAll.selected ? 'all' : 'group';
			}
			
			[Bindable(event="change")]
			public function get groupID():int
			{
				if(listItemGroup.selectedItem)
					return listItemGroup.selectedItem.value;
				
				return 0;
			}
			
			// implementation of IOptionView
			public function set presentationModel( value : IRecordModel ) : void {}
			public function get presentationModel() : IRecordModel { return null; }
		]]>
	</mx:Script>

	<mx:Style>
		.textHeading {
			color:#333333;
			fontSize:14;	
		}
		.textDesc {
			color:#333333;
			fontSize:10;	
		}
	</mx:Style>
		
</mx:VBox>