<?xml version="1.0" encoding="utf-8"?>
<mx:VBox 
	xmlns:mx="http://www.adobe.com/2006/mxml" 
	xmlns:controls="com.enilsson.controls.*"
	implements="com.enilsson.elephantadmin.interfaces.IOptionView"
	label="HOST COMMITTEE"
	enabled="{!_presentationModel.hostCommitteeProcessing}"
	width="100%" height="100%"
	paddingLeft="5" paddingRight="5"
	paddingBottom="5" xmlns:common="com.enilsson.elephantadmin.views.common.*">
	
	<mx:Text styleName="textDesc" width="100%">
		<mx:htmlText>
<![CDATA[
List below are all the host committee members for this event. Clicking the fundraising goal for each member will allow you to edit the amount.				
]]>
		</mx:htmlText>
	</mx:Text>
	
	<mx:HBox width="100%"
		borderColor="#FFFFFF" borderStyle="solid"
		backgroundColor="#FFFFFF" cornerRadius="4"
		paddingTop="3" paddingBottom="3"
		horizontalAlign="center"
		verticalAlign="middle">
		<mx:Text styleName="textDesc" text="Select new event host:" />
		<controls:LookupInput id="addHost"
			styleName="struktorInput"
			itemRenderer="{new ClassFactory(EventHost_Item)}"
			searchDataProvider="{_presentationModel.hostsList}"
			searchStart="_presentationModel.hostsSearchStart( event )" />			
		<common:CMSSubmitBtn
			width="85" fontSize="10"
			label="ADD HOST" 
			click="_presentationModel.addEventHost( addHost.selectedData )"
			/>		
	</mx:HBox>
	
	<mx:DataGrid editable="true"
		itemEditBeginning="disableEditing(event)"
		itemEditEnd="_presentationModel.updateEventHost( event )"
		dataProvider="{_presentationModel.hostCommittee}"
		width="100%" height="100%">
		<mx:columns>
			<mx:DataGridColumn headerText="First Name" 
				labelFunction="fnameLabel"
				sortCompareFunction="alphaSortFname" />
			<mx:DataGridColumn headerText="Last Name" 
				labelFunction="lnameLabel"
				sortCompareFunction="alphaSortLname" />
			<mx:DataGridColumn headerText="FID" 
				labelFunction="fidLabel" width="60"
				sortCompareFunction="alphaSortFid" />
			<mx:DataGridColumn headerText="Goal" dataField="fundraising_goal">
				<mx:itemEditor>
                    <mx:Component>
                        <mx:TextInput restrict="0-9." />
                    </mx:Component>
                </mx:itemEditor>
            </mx:DataGridColumn>
			<mx:DataGridColumn width="22">
				<mx:itemRenderer>
					<mx:Component>
						<mx:HBox horizontalAlign="center" verticalAlign="middle" height="100%">
							<mx:Button useHandCursor="true" buttonMode="true"
								styleName="deleteRecord"
								click="parentDocument._presentationModel.deleteEventHost( data.id )"
								toolTip="Delete this committee member" />
						</mx:HBox>
					</mx:Component>
				</mx:itemRenderer>
			</mx:DataGridColumn>
			<mx:DataGridColumn width="22">
				<mx:itemRenderer>
					<mx:Component>
						<mx:HBox horizontalAlign="center">
							<mx:Button useHandCursor="true" buttonMode="true"
								styleName="inspectRecord"
								click="new SidEvent( data.user_id.sid ).dispatch()"
								toolTip="View this fundraiser" />
							<mx:Script>
								<![CDATA[
									import com.enilsson.elephantadmin.events.main.SidEvent;
								]]>
							</mx:Script>
						</mx:HBox>
					</mx:Component>
				</mx:itemRenderer>
			</mx:DataGridColumn>
		</mx:columns>
	</mx:DataGrid>

	<mx:HBox width="100%" horizontalAlign="center" 
		horizontalGap="12" paddingTop="0">
		<common:CMSSubmitBtn
			label="VIEW HOST COMMITTEE REPORT"
			width="200"
			click="new ReportingEvent(ReportingEvent.SHOW_RECORD, null, 'HostCommittee', _presentationModel.recordID).dispatch()"/>
	</mx:HBox>		
	
	<mx:Script>
		<![CDATA[
			import com.enilsson.elephantadmin.events.modules.ReportingEvent;
			import mx.utils.ObjectUtil;
			import mx.events.DataGridEvent;
			import com.enilsson.elephantadmin.views.modules.events.renderers.EventHost_Item;
			import com.enilsson.elephantadmin.views.modules.events.model.EventsModel;
			import com.enilsson.elephantadmin.interfaces.IRecordModel;	

			
			[Bindable] public  var _presentationModel:EventsModel;
			public function set presentationModel ( value:IRecordModel ):void
			{
				_presentationModel = EventsModel(value);
			}
			[Bindable] public function get presentationModel():IRecordModel
			{
				return _presentationModel;
			}
			
			private function fnameLabel(item:Object, column:DataGridColumn):String
			{
				return item.user_id.fname;
			}

			private function lnameLabel(item:Object, column:DataGridColumn):String
			{
				return item.user_id.lname;
			}

			private function fidLabel(item:Object, column:DataGridColumn):String
			{
				return item.user_id._fid;
			}

			private function alphaSortFname(itemA:Object, itemB:Object):int
			{
				return ObjectUtil.stringCompare(itemA.user_id.fname, itemB.user_id.fname, true)
			}

			private function alphaSortLname(itemA:Object, itemB:Object):int
			{
				return ObjectUtil.stringCompare(itemA.user_id.lname, itemB.user_id.lname, true)
			}

			private function alphaSortFid(itemA:Object, itemB:Object):int
			{
				return ObjectUtil.stringCompare(itemA.user_id._fid, itemB.user_id._fid, true)
			}


	     	private function disableEditing( event:DataGridEvent ):void 
	     	{
	        	if(event.columnIndex != 3 )
	                event.preventDefault();
	  		} 
			
		]]>
	</mx:Script>	
	
</mx:VBox>
