<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas 
	xmlns:mx="http://www.adobe.com/2006/mxml"
	xmlns:common="com.enilsson.elephantadmin.views.common.*" 
	xmlns:controls="com.enilsson.controls.*"
	creationComplete="init()" 
	width="450" height="26"
	horizontalScrollPolicy="off" verticalScrollPolicy="off" 
	clipContent="false">
	
	<mx:Canvas styleName="searchForm"
		width="415" height="26"
		horizontalScrollPolicy="off" verticalScrollPolicy="off">
		<mx:filters>
			<mx:DropShadowFilter inner="true" distance="3" alpha="0.35" blurX="2" blurY="2"/>
		</mx:filters>
		<common:SearchBox id="searchBox" 
			width="300" 
			y="3" left="3" 
			searchStart="handleSearchStart(event)" />
		<mx:VRule strokeColor="#000000" height="16" x="305" y="5"/>
	</mx:Canvas>
	
	<common:HoverComboBox id="searchComboBox" 
		width="100"
		x="310" y="3"
		itemClick="searchComboClickHandler(event)"
		resizeEffect="resize" />	
		
	<mx:LinkButton id="searchButton"
		styleName="searchButton"
		x="420" y="3"
		label="SEARCH" 
		click="triggerSearch()" />


	<mx:Fade id="fadeIn" alphaFrom="0" alphaTo="1" duration="300" />
	<mx:Fade id="fadeOut" alphaFrom="1" alphaTo="0" duration="300" />
	<mx:Resize id="resize" duration="300" />

	<mx:Metadata>
		[Event(name="searchStart", type="flash.events.Event")]
	</mx:Metadata>

	<mx:Script>
		<![CDATA[
			import org.osflash.thunderbolt.Logger;
			import com.enilsson.elephantadmin.models.viewclasses.SearchViewClass;
			import mx.controls.Alert;
			import mx.binding.utils.BindingUtils;
			import mx.binding.utils.ChangeWatcher;
			import mx.events.CloseEvent;
			import mx.managers.PopUpManager;
			import mx.events.ListEvent;
			import mx.events.ItemClickEvent;
			import com.enilsson.elephantadmin.models.EAModelLocator;
			import mx.collections.ArrayCollection;
			
			[Bindable] private var _model:EAModelLocator = EAModelLocator.getInstance();
			
			public var searchOption:Object = SearchViewClass.SEARCH_OPTIONS.getItemAt(0);

			private function init():void
			{
				setUserLevel();
			}
			
			public function setUserLevel ( ):void
			{
				/* if ( _model.userLevel == 'power' )
				{
					var options:ArrayCollection = 	_model.search.searchOptions
					var obj:Object = options.getItemAt(0);
					if ( obj.label == 'EVERYTHING' )
						options.removeItemAt(0);
						
					searchComboBox.dataProvider = options;
				}
				else */
					searchComboBox.dataProvider = SearchViewClass.SEARCH_OPTIONS;
			}
			
			private function searchComboClickHandler(event:ListEvent):void
			{
				searchOption = event.itemRenderer.data;
			}
			
			private function handleSearchStart( event : Event ) : void
			{
				event.stopImmediatePropagation();
				triggerSearch();
			}
			
			private function triggerSearch() : void
			{
				if( searchBox.searchTerm.length > 0)
				{
					dispatchEvent( new Event("searchStart") );
				}
			}
		]]>
	</mx:Script>

</mx:Canvas>