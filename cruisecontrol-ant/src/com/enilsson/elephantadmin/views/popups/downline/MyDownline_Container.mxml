<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas 
	xmlns:mx="http://www.adobe.com/2006/mxml"
	xmlns:visual="org.un.cava.birdeye.ravis.graphLayout.visual.*"
	xmlns:vgraphControls="org.un.cava.birdeye.ravis.components.ui.controls.vgraphControls.*" 
	xmlns:ns="com.enilsson.elephantadmin.views.popups.downline.*"
	horizontalScrollPolicy="off" verticalScrollPolicy="off"
	>

	<mx:Metadata>
		[Event(name="fullScreen", type="flash.events.Event")]		
		[Event(name="exitFullScreen", type="flash.events.Event")]				
	</mx:Metadata>
	
	<mx:Script>
		<![CDATA[
			import com.enilsson.elephantadmin.models.EAModelLocator;
			import org.un.cava.birdeye.ravis.graphLayout.visual.edgeRenderers.BaseEdgeRenderer;
			import org.un.cava.birdeye.ravis.graphLayout.visual.edgeRenderers.OrthogonalEdgeRenderer;
			import mx.events.ListEvent;
			import org.un.cava.birdeye.ravis.graphLayout.layout.HierarchicalLayouter;
			import com.enilsson.elephantadmin.events.popups.DownlineEvent;
			import com.enilsson.elephantadmin.events.session.PingEvent;
			
			import org.un.cava.birdeye.ravis.graphLayout.layout.ConcentricRadialLayouter;

			import mx.utils.ObjectUtil;
			import org.osflash.thunderbolt.Logger;

			[Bindable] private var _model:EAModelLocator = EAModelLocator.getInstance();
			private var _chartDrawn:Boolean = false;

			public function redraw():void
			{
				changeChartLayout();
			}

			/**
			 * Change the chart based on the drop down choice
			 */
			private function changeChartLayout():void 
			{
				var startRoot:* = _model.downline.graph.nodeByStringId(_model.downline.userID.toString()).vnode;
				
				if(_chartDrawn) return;
				
				switch(controlsPanel.chartType)
				{
					case 'concentricRadial' :
						var crLayouter:ConcentricRadialLayouter = new ConcentricRadialLayouter(downlineChart);
									
						downlineChart.layouter = crLayouter;
						downlineChart.edgeRenderer = new BaseEdgeRenderer(downlineChart.edgeDrawGraphics);
					break;
					case 'hierarchicalTree' :
						var htLayouter:HierarchicalLayouter= new HierarchicalLayouter(downlineChart);
						htLayouter.siblingSpreadDistance = 20;
						htLayouter.autoFitEnabled = true;
						
						downlineChart.layouter = htLayouter;	
						var oer:OrthogonalEdgeRenderer = new OrthogonalEdgeRenderer(downlineChart.edgeDrawGraphics);
						oer.arrowLength = 6;	
						downlineChart.edgeRenderer = oer; 
					break;
				}
				
				downlineChart.maxVisibleDistance = controlsPanel.degreesSeperation;
				downlineChart.currentRootVNode = startRoot;
				downlineChart.draw();	
				
				_chartDrawn = true;			
			}			
			
		]]>
	</mx:Script>
	
	
	<mx:Canvas
		top="0" horizontalCenter="0"
		width="1000" 
		height="{height}" 
		backgroundColor="#f0f0f0" 
		clipContent="true" 
		horizontalScrollPolicy="off" 
		verticalScrollPolicy="off">
		<visual:VisualGraph id="downlineChart"
			width="100%" height="100%"
			top="17" horizontalCenter="0" 
			visible="{_model.downline.graphShow}" 
			show="changeChartLayout()"
			graph="{_model.downline.graph}"
			visibilityLimitActive="true"   
			itemRenderer="com.enilsson.elephantadmin.views.popups.downline.basicNodeRenderer" 	
			edgeLabelRenderer="com.enilsson.elephantadmin.views.popups.downline.basicEdgeLabelRenderer"		
			/>
	</mx:Canvas>
	
	<ns:MyDownline_ChartControls 
		id="controlsPanel" styleName="controlsPanel"
		height="60" width="{this.width}" y="-43" 
		vgraph="{downlineChart}" 
		changeChartLayout="changeChartLayout()"
		 />

	<mx:Button styleName="zoomLabel" 
		height="15"
		label="reset graph"
		bottom="2" right="5"
		click="changeChartLayout()" />
	
</mx:Canvas>