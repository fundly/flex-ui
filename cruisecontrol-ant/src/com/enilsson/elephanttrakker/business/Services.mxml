<?xml version="1.0" encoding="utf-8"?>
<business:ServiceLocator
    xmlns:mx="http://www.adobe.com/2006/mxml"
    xmlns:business="com.adobe.cairngorm.business.*">
    
	<mx:Script>
		<![CDATA[
			import com.enilsson.elephantadmin.models.Icons;
			import mx.events.CloseEvent;
			import mx.utils.ObjectUtil;
			import org.osflash.thunderbolt.Logger;
			import mx.controls.Alert;
			import mx.rpc.events.FaultEvent;
			import com.enilsson.elephanttrakker.models.ETModelLocator;
			
			[Bindable] private var _model:ETModelLocator = ETModelLocator.getInstance();
			
			private var _alert : Alert;
			
			private function handleFault( event : FaultEvent ) : void 
			{
				if(_model.debug) Logger.info('Global Fault Handler', _model.session == null, ObjectUtil.toString(event.fault));
				
				switch ( event.fault.faultCode )
				{
		 			case 'AMFPHP_AUTHENTICATE_ERROR' :
						_model.reset();
						
						if(!_alert)
						{
							_alert = Alert.show(	
								'Your ' + _model.appName + ' session has expired, please login to continue!',
								'Session timeout', 
								0, 
								null,
								handleClose,
								Icons.ALERT
							);
						}
					break;
					case 'AMFPHP_INEXISTANT_METHOD' :
						_model.reset();
						
						if(!_alert)
						{
							_alert = Alert.show(	
								'There has been an internal error with ' + _model.appName + ', please contact support!',
								'Internal Error', 
								0, 
								null,
								handleClose,
								Icons.ALERT
							);
						}
					
					break;
					case 'Client.Error.MessageSend' :
					case 'Client.Error.DeliveryInDoubt' :
						_model.reset();
						
						if(!_alert)
						{
							_alert =Alert.show(	
								'Your ' + _model.appName + ' session is not authenticated, please login to continue!',
								'Session authentication error', 
								0, 
								null,
								handleClose,
								Icons.ALERT
							);
						}
					break;
				}
			}
			
			private function handleClose( event : CloseEvent ) : void {
				_alert = null;
			}
			
		]]>
	</mx:Script>

    <mx:RemoteObject id="authentikator"
		endpoint="{_model.authURL}"
		destination="amfphp" 
    	source="e_auth.e_auth" 
    	showBusyCursor="true"
    	fault="handleFault(event)">
    	<mx:method name="list_instances" />
    	<mx:method name="random_gateway" />
    </mx:RemoteObject>

 	<mx:RemoteObject id="struktorPayment"
    	endpoint="{_model.gatewayURL}" 
    	destination="amfphp" 
    	source="payments.payment" 
    	showBusyCursor="true"
    	fault="handleFault(event)">
    	<mx:method name="bill_card" />
    </mx:RemoteObject>
     
    <mx:RemoteObject id="struktorAuth"
    	endpoint="{_model.gatewayURL}" 
    	destination="amfphp" 
    	source="struktor.auth" 
    	showBusyCursor="true"
    	fault="handleFault(event)">
    	<mx:method name="get_session_info" />
    	<mx:method name="end_session" />
    </mx:RemoteObject>
    
    <mx:RemoteObject id="struktorSys"
    	endpoint="{_model.gatewayURL}" 
    	destination="amfphp" 
    	source="struktor.sys"
    	fault="handleFault(event)">
    	<mx:method name="ping" />
    </mx:RemoteObject>    

    <mx:RemoteObject id="struktorImporter"
    	endpoint="{_model.gatewayURL}" 
    	destination="amfphp" 
    	source="plugins.{_model.appInstanceID}.importer" 
    	showBusyCursor="true"
    	fault="handleFault(event)">
    	<mx:method name="empty_cache" />
    	<mx:method name="fetch_imported" />
    	<mx:method name="migrate" />
    </mx:RemoteObject>
    
    <mx:RemoteObject id="struktorPluginsDownline"
    	endpoint="{_model.gatewayURL}" 
    	destination="amfphp" 
    	source="plugins.{_model.appInstanceID}.downline" 
    	showBusyCursor="true"
    	fault="handleFault(event)">
    	<mx:method name="get_downline" />
    </mx:RemoteObject>

    <mx:RemoteObject id="struktorPluginsRSS"
    	endpoint="{_model.gatewayURL}" 
    	destination="amfphp" 
    	source="plugins.{_model.appInstanceID}.rssExtractor" 
    	showBusyCursor="true"
    	fault="handleFault(event)">
    	<mx:method name="selective_feed" />
    </mx:RemoteObject>
    
    <mx:RemoteObject id="struktorPluginsEmail"
    	endpoint="{_model.gatewayURL}" 
    	destination="amfphp" 
    	source="plugins.{_model.appInstanceID}.email" 
    	showBusyCursor="true"
    	fault="handleFault(event)">
    	<mx:method name="send_email" />
    </mx:RemoteObject>    
    
    <mx:RemoteObject id="struktorPluginsMsgs"
    	endpoint="{_model.gatewayURL}" 
    	destination="amfphp" 
    	source="plugins.{_model.appInstanceID}.msgs" 
    	showBusyCursor="true"
    	fault="handleFault(event)">
    	<mx:method name="send_message" />
    </mx:RemoteObject>    
    
    <mx:RemoteObject id="struktorPluginsContacts"
    	endpoint="{_model.gatewayURL}" 
    	destination="amfphp" 
    	source="plugins.{_model.appInstanceID}.contacts" 
    	showBusyCursor="true"
    	fault="handleFault(event)">
    	<mx:method name="list_contacts" />
    	<mx:method name="search" />
    	<mx:method name="upsert_contact" />
    </mx:RemoteObject>
    
    <mx:RemoteObject id="struktorPluginsPledges"
    	endpoint="{_model.gatewayURL}" 
    	destination="amfphp" 
    	source="plugins.{_model.appInstanceID}.pledges" 
    	requestTimeout="120"
    	showBusyCursor="true"
    	fault="handleFault(event)">
    	<mx:method name="process_pledge" />
    </mx:RemoteObject>                    

    <mx:RemoteObject id="struktorSelect"
    	endpoint="{_model.gatewayURL}" 
    	destination="amfphp" 
    	source="struktor.select" 
    	showBusyCursor="true"
    	fault="handleFault(event)">
    	<mx:method name="get_related_tree" />
    	<mx:method name="record_tree" />
    	<mx:method name="get_sid_tree" />
    	<mx:method name="get_sid_record" />
    </mx:RemoteObject>
    
    <mx:RemoteObject id="struktorCounting"
    	endpoint="{_model.gatewayURL}" 
    	destination="amfphp" 
    	source="struktor.counting" 
    	showBusyCursor="true"
    	fault="handleFault(event)">
    	<mx:method name="global_count" />
    	<mx:method name="personal_count" />
    </mx:RemoteObject>
    
    <mx:RemoteObject id="struktorSearch"
    	endpoint="{_model.gatewayURL}" 
    	destination="amfphp" 
    	source="struktor.search" 
    	showBusyCursor="true"
    	fault="handleFault(event)">
    	<mx:method name="similar" />
    	<mx:method name="table" />
    </mx:RemoteObject>
    
    <mx:RemoteObject id="struktorEdit"
    	endpoint="{_model.gatewayURL}" 
    	destination="amfphp" 
    	source="struktor.edit" 
    	showBusyCursor="true"
    	fault="handleFault(event)">
    	<mx:method name="del" />
    	<mx:method name="upsert" />
    </mx:RemoteObject>    

    <mx:RemoteObject id="struktorLayout"
    	endpoint="{_model.gatewayURL}" 
    	destination="amfphp" 
    	source="struktor.layout" 
    	showBusyCursor="true"
    	fault="handleFault(event)">
    	<mx:method name="fetch_layout" />
    </mx:RemoteObject>

	<mx:RemoteObject id="struktorTicket"
    	endpoint="{_model.gatewayURL}" 
    	destination="amfphp" 
    	source="struktor.ticket" 
    	showBusyCursor="true"
    	fault="handleFault(event)">
    	<mx:method name="create" />
    </mx:RemoteObject>
  
	<mx:RemoteObject id="struktorAuthentikator"
    	endpoint="{_model.gatewayURL}" 
    	destination="amfphp" 
    	source="authentikator.password" 
    	showBusyCursor="true"
    	fault="handleFault(event)">
    	<mx:method name="change_password" />
    	<mx:method name="wheel" />
    </mx:RemoteObject>
    
    <mx:HTTPService id="versionService"
		url="{_model.versionInfoUrl}"
		contentType="application/xml"
		resultFormat="e4x"
		showBusyCursor="true" />

</business:ServiceLocator>