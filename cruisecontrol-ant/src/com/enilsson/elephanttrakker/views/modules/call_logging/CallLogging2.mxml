<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas 
	xmlns:mx="http://www.adobe.com/2006/mxml" 
	xmlns:struktorForm="com.enilsson.utils.struktorForm.*" 
	xmlns:views="com.enilsson.elephanttrakker.views.modules.call_logging.*"
	xmlns:popups="com.enilsson.elephanttrakker.views.modules.call_logging.popups.*"
	xmlns:graphics="com.enilsson.graphics.*"
	xmlns:common="com.enilsson.elephanttrakker.views.common.*"
	show="init()"
	verticalScrollPolicy="off" horizontalScrollPolicy="off">

	<mx:Image source="{_model.icons.pledge}" top="0" right="0" />
	<mx:Text id="contentTitle" styleName="contentTitle" text="PROCESSING WORKSPACE" right="-223" top="40" rotation="90" />

	<mx:Canvas styleName="tabBarBg" 
		width="634" height="35"
		top="0" left="0" />
	<mx:TabBar id="lnkbar" styleName="qcmTab"
		dataProvider="{vstack}" 
		tabHeight="35" fontSize="10"
		itemClick="_model.call_logging.vindex = event.index;"
		useHandCursor="true" buttonMode="true" />
		
	<mx:ViewStack id="vstack" 
		creationPolicy="all"  
		width="630" height="242" 
		top="40" left="5" 
		change="_IndexChange = event"
		selectedIndex="{_model.call_logging.vindex}">
		<views:CallLogging_ContactDetails
			hide="showHandler(event)"
			label="contact information" 
			showEffect="moveLeftShow" 
			hideEffect="moveRightHide" />
		<views:CallLogging_PledgeInfo 
			hide="showHandler(event)"
			label="pledge &amp; payment details" 
			showEffect="moveLeftShow" 
			hideEffect="moveRightHide" />
	</mx:ViewStack>
	
	<views:CallLogging_Footer id="cFooter"
		styleName="buttons" 
		isFormValid="{_model.call_logging.workspaceValid}" 
		width="634" height="40"  
		bottom="0" left="0" />
		
	<mx:Canvas id="formProcessingIndicator" 
		visible="{_model.call_logging.formProcessing}"
		top="0" left="0"
		width="100%" height="100%" 
		backgroundColor="#CCCCCC" backgroundAlpha="0.75"
		showEffect="fadeIn" hideEffect="fadeOut">
		<graphics:ActivityIndicator id="formActivity"
			visible="{formProcessingIndicator.visible}"
			width="85" height="85" 
			verticalCenter="0" horizontalCenter="0"
			boxFillColors="[0x12288c, 0x0b1850]" 
			textStyleName="processingText" 
			textMessage="Processing" />
	</mx:Canvas>
	
	<mx:Canvas id="duplicatesList" 
		visible="{_model.call_logging.showDupBox}"
		top="0" left="0"
		width="100%" height="100%" 
		backgroundColor="#CCCCCC" backgroundAlpha="0.75"
		showEffect="fadeIn" hideEffect="fadeOut">
		<mx:ViewStack selectedIndex="{_model.call_logging.dupsVStack}" 
			verticalCenter="0" horizontalCenter="0">
			<popups:CallLogging_ShowDups runInit="{duplicatesList.visible}" />
			<popups:CallLogging_PledgeDups />
		</mx:ViewStack>
	</mx:Canvas>	
	
	<popups:CallLogging_ErrorList id="errorsList" 
		bottom="40" left="68"
		visible="{_model.call_logging.showErrorList}"
		showEffect="fadeIn" hideEffect="fadeOut" />
	
	<common:ErrorMsgBox id="callLoggingErrorBox"
		verticalCenter="0" horizontalCenter="0"
		params="{_model.call_logging.errorVO}" />
	
	<popups:CallLogging_PledgeComplete id="pledgeComplete"
		visible="{_model.call_logging.completedPledge}"
		top="0" left="0" 
		showEffect="fadeIn" hideEffect="fadeOut" />


	<mx:Fade id="fadeIn" alphaTo="1" duration="300" />
	<mx:Fade id="fadeOut" alphaTo="0" duration="300" />
	<mx:Move id="moveLeftShow" xFrom="{_showX}" xTo="0" duration="500" />
    <mx:Move id="moveRightHide" xFrom="0" xTo="{_hideX}" duration="500" /> 

	<mx:Binding source="_model.siteLayoutLoaded" destination="agreementTab" />

	<mx:Script>
		<![CDATA[
			import mx.utils.ObjectUtil;
			import mx.events.FlexEvent;
			import mx.events.IndexChangedEvent;
			import com.enilsson.elephanttrakker.events.modules.call_logging.PledgeWorkspaceEvent;
			import com.enilsson.elephanttrakker.events.modules.call_logging.CallLoggingEvent;
			import org.osflash.thunderbolt.Logger;
			import com.enilsson.elephanttrakker.events.session.PingEvent;
			import mx.events.ItemClickEvent;
			import com.enilsson.elephanttrakker.events.modules.call_logging.CallLoggingLayoutEvent;
			import com.enilsson.elephanttrakker.vo.LayoutVO;
			import com.enilsson.elephanttrakker.models.ETModelLocator;
			
			[Bindable] private var _model:ETModelLocator = ETModelLocator.getInstance();
			[Bindable] private var _runInit:Boolean = false;
			
			private var aTab:CallLogging_DynamicAgreement;
			
			/**
			 * Listen for the site layout loading then build the agreement tab if need be
			 */
			public function set agreementTab ( value:Boolean ):void
			{
				// dont build anything if the layout isnt loaded or there is no agreement or it has already been built
				if ( !value ) return;
				if ( _model.call_logging.agreement == null ) return;
				if ( aTab ) return;
				
				// create the tab
				aTab = new CallLogging_DynamicAgreement();
				aTab.label = 'agreement';
				aTab.runInit = _model.call_logging.runInit;
				aTab.addEventListener( FlexEvent.HIDE, showHandler );
				aTab.setStyle( "showEffect", moveLeftShow ); 
				aTab.setStyle( "hideEffect", moveRightHide );	
				
				// add the tab if the viewstack is initialised
				if( vstack ) vstack.addChild( aTab );
			}
			
			public function set runInit(value:Boolean):void
			{				
				if(value && _model.mainViewState == ETModelLocator.CALL_LOGGING_VIEW)
					init();
			}
				
			private function init():void
			{
				// ping the server to make sure that all is well
				new PingEvent().dispatch();
				
				// check to see if the agreement tab needs to be added
				if ( aTab && vstack.numChildren < 3 )
					vstack.addChild( aTab );		
				
				// capture how many tabs have been created
				_model.call_logging.numTabs = vstack.numChildren;	
				
				// add the session user id to the model
				_model.call_logging.userID = _model.session.user_id;
				
				// add the list of fields to the model
				_model.call_logging.pledgeFields = _model.struktorLayout.pledges.fieldNames;
				
				// if this is a save set the action to 'Add'
				if(_model.call_logging.savedID != 0)
					_model.call_logging.formAction = 'add';				
				
				// get the pledge information if this is going to be an edit
				if (_model.call_logging.load_pledge_id != 0) 
					new PledgeWorkspaceEvent( PledgeWorkspaceEvent.GET_PLEDGE ).dispatch();
					
				// if loading contact details, just get the contact info
				else if (_model.call_logging.load_contact_id != 0) 
					new PledgeWorkspaceEvent( PledgeWorkspaceEvent.GET_CONTACT ).dispatch();
				
				else
					_model.call_logging.runInit = false;
					
				// move the vstack back the first page
				_model.call_logging.vindex = 0;	
				
				// make sure the completed page is hidden
				_model.call_logging.completedPledge = false;		
			}

			[Bindable] private var _showX:Number = 630;
			[Bindable] private var _hideX:Number = -630;			
			[Bindable] private var _IndexChange:IndexChangedEvent;
			private function showHandler(event:FlexEvent):void
			{				
				if( !_IndexChange ) return;
				
				if( _IndexChange.newIndex == 0 )
				{				
					_showX = 630;
					_hideX = -630;
				}				
				if( _IndexChange.newIndex == (_model.call_logging.numTabs - 1) )
				{				
					_showX = -630;
					_hideX = 630;
				}
			}

		]]>
	</mx:Script>
	
</mx:Canvas>