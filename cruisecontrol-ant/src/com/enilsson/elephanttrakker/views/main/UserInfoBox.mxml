<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas 
	xmlns:mx="http://www.adobe.com/2006/mxml"
	xmlns:common="com.enilsson.elephanttrakker.views.common.*" 
	creationComplete="init()" 
	horizontalScrollPolicy="off" verticalScrollPolicy="off" 
	clipContent="true">
	
	<mx:Script>
		<![CDATA[
			import mx.binding.utils.BindingUtils;
			import mx.binding.utils.ChangeWatcher;
			import mx.events.CloseEvent;
			import mx.managers.PopUpManager;
			import org.osflash.thunderbolt.Logger;
			import mx.events.ListEvent;
			import mx.events.ItemClickEvent;
			import com.enilsson.elephanttrakker.models.ETModelLocator;
			import caurina.transitions.Tweener;
			
			[Bindable] private var _model:ETModelLocator = ETModelLocator.getInstance();

			[Embed(source="/assets/images/icons/small/person.png")]
			[Bindable] private var user:Class;

			[Embed(source="/assets/images/icons/small/discussion.png")]
			[Bindable] private var discussion:Class;			

			[Embed(source="/assets/images/icons/small/question_purple.png")]
			[Bindable] private var help_purple:Class;					
			
			[Embed(source="/assets/images/icons/small/web_browser.png")]
			[Bindable] private var web_browser:Class;					
			
			[Embed(source="/assets/images/icons/small/help_info2.png")]
			[Bindable] private var help_info:Class;								
			
			[Embed(source="/assets/images/new_icons/nav/small/messages.png")]
			[Bindable] private var messages:Class;								
			
			[Embed(source="/assets/images/icons/small/email.png")]
			[Bindable] private var email:Class;								
			
			private function init():void
			{
				addEventListener(MouseEvent.ROLL_OVER, function(event:MouseEvent):void {
					Tweener.addTween(event.target, { 
						height: bnUserLinks.height + 46, 
						time: 0.4, 
						transition: 'easeOutExpo' 
					});
				});
				addEventListener(MouseEvent.ROLL_OUT, function(event:MouseEvent):void {
					Tweener.addTween(event.target, { 
						height: 29, 
						time: 0.4, 
						transition: 'easeInExpo' 
					});
				});
				
				// Workaround to change the bindable variable of the fullname.
				var watcherSetter:ChangeWatcher = BindingUtils.bindSetter(function(v:String):void {
					if (v.length > 14) {
						var tmp:Array = v.split(" ");
						var tmpStr:String = tmp[0] + ' ' + tmp[1].substr(0,1)+".";
						myname.text = tmpStr;
					} else {
						myname.text = v	
					}
					
				}, test, "text");
			}
			
			private function listIconFn(item:Object):Class
			{
				return this[item.icon];				
			}
			
			private function userLinksClickHandler(e:ListEvent):void
			{
				var action:Object = e.currentTarget.selectedItem.action;
				switch(action.type)
				{
					case 'popup' :
					 	var sClass:Class = SupportForm as Class;	 	
					 	var sp:* = PopUpManager.createPopUp( _model.mainScreen, sClass, true );
					    PopUpManager.centerPopUp(sp);
					break;
					case 'module' :
						_model.mainViewState = _model.viewStateList.indexOf(action.destination);
					break;
					case 'url' :
						navigateToURL( new URLRequest( action.destination), '_blank' );
					break;
				}
			}
			
			public function set listMessages( value:Number ):void
			{
				for ( var i:String in _model.userInfoLayout )
				{
					var item:Object = _model.userInfoLayout[i];
					
					if(item.action.destination == 'message_center')
					{
						if(value > 0)
							_model.userInfoLayout[i].name = 'Message Center - ' + value.toString() + ' unread';
						else
							_model.userInfoLayout[i].name = 'Message Center';						
					}					
				}
				
			}
		]]>
	</mx:Script>
	
	<mx:Binding source="_model.siteMsgs" destination="this.listMessages" />
	
	<mx:Fade id="fadeIn" alphaFrom="0" alphaTo="1" duration="300" />
	<mx:Fade id="fadeOut" alphaFrom="1" alphaTo="0" duration="300" />
	
	<mx:HBox top="6" horizontalCenter="10" horizontalGap="0">
		<mx:Text color="#afd33b" id="myname" />
		<mx:Text color="#afd33b" id="test" text="{_model.session.fullname}" visible="false" includeInLayout="false" />
		<mx:Text color="#FFFFFF" text="FID:" />
		<mx:Text color="#afd33b" text="{_model.session.data._fid}" />
	</mx:HBox>
	<mx:Text styleName="bnUserName" id="bnUserName" selectable="false" color="#FFFFFF" />
	<mx:Image source="{_model.icons.singleUser}" left="5" top="1" />
	<mx:List id="bnUserLinks" 
		styleName="bnUserLinks"
		top="32" width="{this.width}"
		textIndent="10"
		dataProvider="{_model.userInfoLayout}" 
		rowCount="{_model.userInfoLayout.length}"
		itemClick="userLinksClickHandler(event)" 
		useHandCursor="true" buttonMode="true"
		labelField="name" 
		iconFunction="listIconFn" />
	<common:AlertCircle	
		top="1" left="18" 
		height="15"
		visible="{_model.siteMsgs &gt; 0}" 
		number="{_model.siteMsgs}"
		/>
		
</mx:Canvas>